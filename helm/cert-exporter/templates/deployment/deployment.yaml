apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{- include "cert-exporter.fullname" . -}}-cert-manager"
  labels:
    {{- include "cert-exporter.certManagerDeploymentLabels" . | nindent 4 }}
spec:
  replicas: {{ .Values.certManagerDeployment.deployment.replicaCount }}
  selector:
    matchLabels:
      {{- include "cert-exporter.certManagerDeploymentSelectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "cert-exporter.certManagerDeploymentSelectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.certManagerDeployment.deployment.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "cert-exporter.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.certManagerDeployment.deployment.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.certManagerDeployment.deployment.securityContext | nindent 12 }}
          image: "{{ .Values.certManagerDeployment.deployment.image.repository  }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.certManagerDeployment.deployment.image.pullPolicy }}
          {{- with .Values.certManagerDeployment.deployment.image.command  }}
          command:
            {{- toYaml . | nindent 12}}
          {{- end}}
          {{- with .Values.certManagerDeployment.deployment.image.args  }}
          args:
            {{- toYaml . | nindent 12}}
          {{- end}}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            {{- toYaml .Values.certManagerDeployment.deployment.resources | nindent 12 }}
          volumeMounts:
            - mountPath: "/data"
              name: data
        - name: cert-importer
          image: "{{ .Values.certManagerDeployment.deployment.certImporter.image.repository }}:{{ .Values.certManagerDeployment.deployment.certImporter.image.tag }}"
          imagePullPolicy: {{ .Values.certManagerDeployment.deployment.certImporter.image.pullPolicy }}
          {{- with .Values.certManagerDeployment.deployment.certImporter.env  }}
          env:
            {{- toYaml . | nindent 12}}
          {{- end}}          
          ports:
            - name: http
              containerPort: 4500
              protocol: TCP
          resources:
            {{- toYaml .Values.certManagerDeployment.deployment.certImporter.resources | nindent 12 }}
          volumeMounts:
            - mountPath: "/uploads"
              name: data
            - mountPath: /auth
              name: importer-credentials
      {{- with .Values.certManagerDeployment.deployment.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.certManagerDeployment.deployment.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.certManagerDeployment.deployment.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "cert-exporter.fullname" . }}
        - name: importer-credentials
          secret:
            secretName: {{ include "cert-exporter.fullname" . }}-importer

